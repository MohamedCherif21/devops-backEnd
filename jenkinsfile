pipeline {
    agent any
  

    stages{
        
    stage ("Mvn Clean"){
        steps{
                sh "mvn clean"
            }
    }

    stage ("Mvn Package"){
        steps{
                sh "mvn package"
            }
        }

    stage("NEXUS") {
			steps {
						sh 'mvn clean deploy -DskipTests'
          }
        }

    /*
    stage("SonarQube ") {
            steps {
              withSonarQubeEnv('jenkins-sonar') {
                sh 'mvn clean -DskipTests package sonar:sonar'
              }
            }
    }
*/

    stage('SONARQUBE') {
            steps {
                sh'mvn sonar:sonar -Dsonar.host.url=http://192.168.1.3:9000 -Dsonar.login=admin -Dsonar.password=admin'
            }
        }

        

     stage('Docker login') {
      steps {
         sh 'echo "Docker login is processing ...."'
        sh 'docker login --username $dockerhubusername --password $dockerhubpassword'

      }
    }
    stage('Docker build image') {
      steps {
         sh 'echo "Docker build image is processing ...."'
        sh 'docker build -t khaledbouchrika829/gestionski .'
      }
    }
    stage('Docker push') {
      steps {
         sh 'echo "Docker push is processing ...."'
        sh 'docker push khaledbouchrika829/gestionski'

      }
    }
    stage('Docker compose') {
            steps {
                    sh "docker compose up -d"

            }
        }

/*


    stage ("Sonar Cube"){
        steps{
             withSonarQubeEnv(installationName: 'sq1'){
            sh """
                        mvn sonar:sonar \
			-D sonar.login=admin \
                        -D sonar.password=azerty \
			-D sonar.projectKey=org.springframework.boot \
                        
                    """
            
            
             }
            }
        }


        
    stage ("Nexus"){
        steps{
			nexusArtifactUploader artifacts: [[artifactId: 'achat', classifier: 'debug', file: 'target/achat-1.0.jar', type: 'jar']], credentialsId: 'nexus', groupId: 'tn.esprit.rh', nexusUrl: '192.168.43.53:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'maven-releases', version: '1.0'
			}
		}
		   stage('Docker build')
        {
            steps {
                 sh 'docker build -t   .'
            }
        }
      

        
        stage('Docker login')
        {
            steps {
                sh 'echo $dockerhub_PSW | docker login -u  -p '
            }    
       
        }
      stage('Push') {

            steps {
                sh 'docker push  '
                }
            }
        stage('Run app With DockerCompose') {
              steps {
                  sh "docker-compose -f docker-compose.yml up -d  "
              }
            }
*/
}
}